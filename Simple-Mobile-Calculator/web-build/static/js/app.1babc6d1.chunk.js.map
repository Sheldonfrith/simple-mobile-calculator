{"version":3,"sources":["components/CustomButton.jsx","components/NumberArea.jsx","components/OperatorArea.jsx","App.js","web-build/register-service-worker.js"],"names":["CustomButton","onPress","onPressParam","title","fontSize","margin","backgroundColor","fontColor","style","fontScale","Dimensions","get","styles","buttonContainer","flex","justifyContent","alignItems","borderWidth","paddingHorizontal","paddingVertical","overflow","buttonText","textTransform","color","TouchableOpacity","Text","adjustsFontSizeToFit","numberOfLines","NumberArea","getNumbers","rowNumber","console","log","View","view","row","map","number","index","key","JSON","stringify","StyleSheet","create","flexDirection","OperatorArea","windowHeight","windowWidth","App","useState","displayVal","setDisplayVal","openLink","useCallback","link","Linking","canOpenURL","then","supported","openURL","lastCharIsOperator","isMinus","lastOperatorPosition","length","lastOperator","substring","secondLastCharacter","undefined","oldVal","slice","isOperatorInDisplayVal","indexOf","evaluate","regexOperators","RegExp","execOnOperators","operatorSequence","operatorIndexes","exec","push","regexNumbers","execResult","numberSequence","numberIndexes","forEach","num","thisIndex","removalIndex","findIndex","splice","pop","resultVal","getResultFromSequence","toString","numbers","operators","originalOperatorsLength","brackets","exponents","division","multiplication","addition","subtraction","operator","updateWithCalc","calculate","newNumber","divide","num1","num2","multiply","add","subtract","type","app","statusBarBackground","header","headerButtons","StatusBar","display","input","maxHeight","borderStyle","flexWrap","navigator","window","addEventListener","serviceWorker","register","scope","info","catch","error"],"mappings":"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","file":"static/js/app.1babc6d1.chunk.js","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\r\nimport {StyleSheet, View, Text, TouchableOpacity, Dimensions} from 'react-native';\r\n\r\nexport default function CustomButton({onPress, onPressParam, title, fontSize, margin, backgroundColor, fontColor, style}) {\r\n\r\n//set default background and font colors and reformat into style code\r\nif (!backgroundColor) backgroundColor='white';\r\nif(!fontColor) fontColor='black';\r\n\r\n//responsive font sizing\r\nconst {fontScale} = Dimensions.get('window');\r\nfontSize = (!fontSize)?30/fontScale: fontSize/fontScale;\r\n\r\n(!margin)?margin = 3:margin=margin;\r\n\r\n//default styles\r\nlet styles = {\r\n    buttonContainer: {\r\n        backgroundColor: backgroundColor,\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderWidth: 3,\r\n        paddingHorizontal: 20,\r\n        paddingVertical: 5,\r\n        margin: margin,\r\n        overflow: 'visible',\r\n    },\r\n    buttonText: {\r\n        fontSize: fontSize,\r\n        justifyContent:'center',\r\n        alignItems: 'center',\r\n        textTransform:'uppercase',\r\n        color: fontColor,\r\n        overflow: 'visible',\r\n    },\r\n};\r\n//apply custom styles\r\nstyles = {\r\n    ...styles,\r\n    ...style,\r\n}\r\n\r\nreturn (\r\n<TouchableOpacity onPress={()=> onPress(onPressParam)} style={styles.buttonContainer}>\r\n    <Text style={styles.buttonText} adjustsFontSizeToFit={true} numberOfLines={1}>{title}</Text>\r\n\r\n</TouchableOpacity>\r\n);\r\n}\r\n\r\n","import React, {useState, useEffect, useContext} from 'react';\r\nimport {View, StyleSheet, Text} from 'react-native'\r\nimport Button from './CustomButton';\r\n\r\nexport default function NumberArea({onPress, backgroundColor}) {\r\n\r\nconst getNumbers = (rowNumber) => {\r\n    switch (rowNumber) {\r\n        case (1 || '1'):\r\n            return [1,2,3];\r\n        case (2 || '2'):\r\n            return [4,5,6];\r\n        case (3 || '3'):\r\n            return [7,8,9];\r\n        case (4 || '4'):\r\n            return [0];\r\n        default:\r\n            console.log('invalid input to getNumbers in NumberArea');\r\n            return;\r\n    }\r\n}\r\n\r\nreturn (\r\n<View style={styles.view}>\r\n    {/* row 1 */}\r\n    <View style={styles.row}>\r\n        {getNumbers(1).map((number, index)=> <Button onPress={onPress} backgroundColor={backgroundColor} onPressParam={number} key={'numberButtonRow4'+index} title={JSON.stringify(number)}/>)}\r\n    </View>\r\n    {/* row 2 */}\r\n    <View style={styles.row}>\r\n        {getNumbers(2).map((number, index)=> <Button onPress={onPress} backgroundColor={backgroundColor} onPressParam={number} key={'numberButtonRow4'+index} title={JSON.stringify(number)}/>)}\r\n    </View>\r\n    {/* row 3 */}\r\n    <View style={styles.row}>\r\n        {getNumbers(3).map((number, index)=> <Button onPress={onPress} backgroundColor={backgroundColor} onPressParam={number} key={'numberButtonRow4'+index} title={JSON.stringify(number)}/>)}\r\n    </View>\r\n    {/* row 4, just 0 */}\r\n    <View style={styles.row}>\r\n        {getNumbers(4).map((number, index)=> <Button onPress={onPress} backgroundColor={backgroundColor} onPressParam={number} key={'numberButtonRow4'+index} title={JSON.stringify(number)}/>)}\r\n    </View>\r\n</View>\r\n);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    view: {\r\n        flex: 0.88,\r\n    },\r\n    row: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'stretch',\r\n    }\r\n})","import React, {useState, useEffect, useContext} from 'react';\r\nimport {View, StyleSheet} from 'react-native'\r\nimport Button from './CustomButton';\r\n\r\n\r\nexport default function OperatorArea({onPress, backgroundColor}) {\r\n\r\nreturn (\r\n<View style={styles.view}>\r\n    <Button onPress={onPress} backgroundColor={backgroundColor} onPressParam={'CE'} fontSize={25} title=\"CE\"/>\r\n    <Button onPress={onPress} backgroundColor={backgroundColor} onPressParam={'+'} title=\"+\"/>\r\n    <Button onPress={onPress} backgroundColor={backgroundColor} onPressParam={'-'} title=\"-\"/>\r\n    <Button onPress={onPress} backgroundColor={backgroundColor} onPressParam={'/'} title=\"/\"/>\r\n    <Button onPress={onPress} backgroundColor={backgroundColor} onPressParam={'x'} fontSize={25} title=\"x\"/>\r\n    <Button onPress={onPress} backgroundColor={backgroundColor} onPressParam={'='} title=\"=\"/>\r\n</View>\r\n);\r\n}\r\nconst styles = StyleSheet.create({\r\n    view: {\r\n        flex: 0.22,\r\n    }\r\n}\r\n)\r\n","import { StatusBar, setStatusBarNetworkActivityIndicatorVisible } from 'expo-status-bar';\nimport React, {useState,useEffect, useCallback} from 'react';\nimport { StyleSheet, Text, View, Dimensions, Linking } from 'react-native';\nimport NumberArea from './components/NumberArea'\nimport OperatorArea from './components/OperatorArea';\nimport Button from './components/CustomButton';\n// import LinearGradient from 'react-native-linear-gradient'\n\n\nconst { windowWidth, windowHeight, fontScale } = Dimensions.get('window');\n\n\nexport default function App() {\n  const [displayVal, setDisplayVal] = useState('0');\n\n  const openLink = useCallback((link)=>{\n    Linking.canOpenURL(link).then(supported => {\n      if (supported) {\n        Linking.openURL(link);\n      } else {\n        console.log(\"Don't know how to open URI: \" + link);\n      }\n    });\n  },[])\n\n  const lastCharIsOperator = useCallback((isMinus=false) => {\n    //checks if the last nonblank char in displayVal is an operator\n    \n    const lastOperatorPosition = displayVal.length-1;\n    const lastOperator = displayVal.substring(lastOperatorPosition);\n    const secondLastCharacter = displayVal.substring(lastOperatorPosition-1,lastOperatorPosition);\n    if (+(lastOperator)===(NaN||null||undefined)){\n      //remove character if previous was a double minus\n      if ((+(secondLastCharacter)===(NaN||null||undefined))&&lastOperator!=='-'&&isMinus === false){\n        setDisplayVal(oldVal => oldVal.slice(0,oldVal.length-1));\n        return true;\n      }\n\n      //allow a minus...\n      //and this isn't the second character\n      // and isMinus is true (meaning current character is also a minus)\n      //AND if the secondlastcharacter is not an operator;\n      if(isMinus &&(displayVal.length>1)&&(+(secondLastCharacter)!==(NaN||null||undefined))){\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }, [displayVal, setDisplayVal]);\n\n  const isOperatorInDisplayVal = useCallback(()=>{\n    return (displayVal.indexOf(('+'||'-'||'/'||'x')))?true:false;\n  },[displayVal])\n  const lastCharIsNumber = useCallback(()=> {\n    return +(displayVal.substring(displayVal.length));\n  },[displayVal])\n\n  const evaluate = useCallback(()=> {\n    //generally called when '=' is pressed\n\n    //if there is no operator, just return the value that is already there\n    if (!isOperatorInDisplayVal()) return;\n\n    //create operator sequence\n    const regexOperators = new RegExp(/[\\D^\\s]/g);\n    let execOnOperators = [];\n    const operatorSequence = [];\n    const operatorIndexes = [];\n    while (execOnOperators = regexOperators.exec(displayVal)){\n      operatorIndexes.push(execOnOperators.index);\n      operatorSequence.push(execOnOperators[0]);\n    }\n\n    //create number sequence\n    const regexNumbers = new RegExp(/\\d+/g);\n    let execResult = [];\n    const numberSequence = [];\n    const numberIndexes = [];\n    //loop to find the numbers and their indexes\n    while (execResult = regexNumbers.exec(displayVal)){\n      numberIndexes.push(execResult.index);\n      numberSequence.push(execResult[0]);\n  }\n    //detect and adjust negative numbers\n    numberSequence.forEach((num,index) => {\n      const thisIndex = numberIndexes[index];\n      //should this be a negative number\n      // first is there a - in front of it\n      //if so, is it the first number in the sequence, or is there some other operator previous to the minus\n      if (displayVal[thisIndex-1]==='-'&&(thisIndex<2||(+(displayVal[thisIndex-2])===(NaN||null||undefined)))){\n        //this should be a negative number...\n        //adjust the number sequence\n        numberSequence[index] = numberSequence[index]*(-1.0);\n        //adjust the operator sequence\n        //remove the - operator at thisIndex-1\n        const removalIndex = operatorIndexes.findIndex((index)=>index===thisIndex-1);\n        operatorSequence.splice(removalIndex,1);\n        operatorIndexes.splice(removalIndex,1);\n      }\n    });\n  \n    //if last char was an operator, remove it and evaluate the expression before it\n    if (lastCharIsOperator()) {operatorSequence.pop();}\n\n    const resultVal = getResultFromSequence(numberSequence,operatorSequence);\n    setDisplayVal((resultVal).toString()); \n  },[displayVal, isOperatorInDisplayVal,lastCharIsOperator,getResultFromSequence]);\n\n  const getResultFromSequence = useCallback((numbers, operators) => {\n    let result;\n    const originalOperatorsLength= operators.length;\n    //make sure all numbers are floats\n    numbers = numbers.map(number => number*1.0);\n\n    //apply bedmas calculation order\n    const brackets = [];\n    const exponents = [];\n    const division = [];\n    const multiplication = [];\n    const addition = [];\n    const subtraction = [];\n    //distribute to sub arrays\n    operators.forEach((operator,index) =>{\n       switch (operator) {\n         case ('('||')'):\n           brackets.push(index);\n           break;\n          case '^':\n            exponents.push(index);\n            break;\n          case '/':\n            division.push(index);\n            break;\n          case 'x':\n            multiplication.push(index);\n            break;\n          case '+':\n            addition.push(index);\n            break;\n          case '-':\n            subtraction.push(index);\n            break;\n          default:\n            console.log('no valid operators, in getResultFromSequence');\n            return;\n       }\n      return;\n    });\n\n    const updateWithCalc = (index, calculate) => {\n      const newNumber = calculate(numbers[index],numbers[index+1]);\n      numbers.splice(index,2,newNumber);\n      operators.splice(index,1);\n      return;\n    }\n    //handle brackets\n    //handle exponents\n    //handle the rest...\n    //divide\n    const divide = (num1,num2)=>{\n      return num1 / num2;\n    }\n    division.forEach(index => {\n      index = index-(originalOperatorsLength-operators.length); //accounts for the removal of operaters from the operators array\n      updateWithCalc(index,divide);\n    });\n    //multiply\n    const multiply = (num1,num2)=>{\n      return num1*num2;\n    }\n    multiplication.forEach(index => {\n      index = index-(originalOperatorsLength-operators.length); //accounts for the removal of operaters from the operators array\n      updateWithCalc(index,multiply)\n    });\n    //add\n    const add = (num1,num2)=>{\n      return num1+num2;\n    }\n    addition.forEach(index=> {\n      index = index-(originalOperatorsLength-operators.length); //accounts for the removal of operaters from the operators array\n      updateWithCalc(index,add)\n    });\n    //subtract\n    const subtract = (num1,num2)=>{\n      return num1-num2;\n    }\n    subtraction.forEach(index=>{\n      index = index-(originalOperatorsLength-operators.length); //accounts for the removal of operaters from the operators array\n      updateWithCalc(index,subtract)\n    });\n\n\n    return numbers[0];\n  },[]);\n\n  //master method, parent to the calculator logic\n  const onPress = useCallback((type) => {\n    if (type=== (null || undefined)) return;\n    type = (type).toString();\n    switch (type) {\n      case ('+'):\n        if (!displayVal  || displayVal === '0') return; //cannot start with an operator\n        lastCharIsOperator()?setDisplayVal(oldVal => (oldVal.substring(0,oldVal.length-1)+type).toString()):setDisplayVal(oldVal=>(oldVal+type).toString());\n        return;\n      case ('-'):\n        //CAN start with a minus\n        if (displayVal === '0') {\n          setDisplayVal('-');\n          return;\n        }\n        lastCharIsOperator(true)?setDisplayVal(oldVal => (oldVal.substring(0,oldVal.length-1)+type).toString()):setDisplayVal(oldVal=>(oldVal+type).toString());\n        return;\n      case ('/'):\n        if (!displayVal || displayVal === '0') return; //cannot start with an operator\n        lastCharIsOperator()?setDisplayVal(oldVal => (oldVal.substring(0,oldVal.length-1)+type).toString()):setDisplayVal(oldVal=>(oldVal+type).toString());\n        return;\n      case ('x'):\n        if (!displayVal || displayVal === '0') return; //cannot start with an operator\n        lastCharIsOperator()?setDisplayVal(oldVal => (oldVal.substring(0,oldVal.length-1)+type).toString()):setDisplayVal(oldVal=>(oldVal+type).toString());\n        return;\n      case ('CE'):\n        if (!displayVal || displayVal === '0') return; //cannot start with an operator\n        setDisplayVal('0');\n        return;\n      case ('='):\n        if (!displayVal || displayVal === '0') return; //cannot start with an operator\n        evaluate();       \n        return;\n      default:\n        //if its a number\n        //if already an operator on there, but no numbers, remove it (unless its a minus)\n        if (lastCharIsOperator()&& (displayVal.length<2)&&(displayVal[0]!=='-')){\n          setDisplayVal(type.toString());\n          return;\n        }\n        setDisplayVal(oldVal => (oldVal==='0'?type:oldVal+''+type).toString());\n        return;\n    }\n  },[evaluate, lastCharIsOperator, displayVal, setDisplayVal]);\n\n  return (\n    \n    <View style={styles.app}>\n      <View style={styles.statusBarBackground}>\n      </View>\n      <View style={styles.header}>\n        <Text style={styles.title} adjustsFontSizeToFit={true} numberOfLines={1}>Simple Mobile Calculator</Text>\n        <View style={styles.headerButtons}>\n        <Button title=\"By Sheldon Frith\" backgroundColor={'#C04CFD'}fontSize={15} onPress={()=> openLink('https://sheldonfrith.com')}/>\n        <Button title=\"View on GitHub\" backgroundColor={'#FC6DAB'}fontSize={15} onPress={()=>openLink('https://github.com/Sheldonfrith/simple-mobile-calculator')}/>\n        </View>\n        <StatusBar style=\"auto\" />\n      </View>\n      <View style={styles.display}>\n        <Text style={{fontSize: 48}} adjustsFontSizeToFit={true} numberOfLines={1}>\n          {displayVal}\n        </Text>\n      </View>\n      <View style={styles.input}>\n        <NumberArea onPress={onPress} backgroundColor={'#C04CFD'}/>\n        <OperatorArea onPress={onPress} backgroundColor={'#FC6DAB'}/>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  app: {\n    maxHeight: windowHeight,\n    flex: 1,\n    backgroundColor: '#3d1952',\n  },\n  header: {\n    flex: 0.3,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {\n    color: '#F7F6C5',\n    fontSize: 30/fontScale,\n  },  \n  headerButtons: {\n    flexDirection: 'row',\n  },  \n  display: {\n    flex: 0.33,\n    backgroundColor: '#F7F6C5',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderStyle: 'solid',\n    borderWidth: 2,\n    margin: 10,\n  },\n  input: {\n    flexDirection: 'row',\n    flex: 1,\n    flexWrap: 'nowrap',\n  },\n  statusBarBackground: {\n    backgroundColor: 'white',\n    flex: 0.07,\n  }\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}